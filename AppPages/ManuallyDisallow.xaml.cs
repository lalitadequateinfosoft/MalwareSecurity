using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MalwareSecurity.AppPages
{
    /// <summary>
    /// Interaction logic for ManuallyDisallow.xaml
    /// </summary>
    public partial class ManuallyDisallow : Page
    {
        public ManuallyDisallow()
        {
            InitializeComponent();
            McDataGrid.ItemsSource = LoadCollectionData();
            txtlabel.Text = "Enter label..";
            txtURl.Text = "Enter URL..";
            txtsearch.Text = "Search allow list by label or URl...";
        }

        private void tb_GotKeyboardFocus(object sender, KeyboardFocusChangedEventArgs e)
        {
            if (sender is TextBox)
            {
                //If nothing has been entered yet.
                if (((TextBox)sender).Foreground == Brushes.Gray)
                {
                    ((TextBox)sender).Text = "";
                    ((TextBox)sender).Foreground = Brushes.Black;
                }
            }
        }


        private void tb_LostKeyboardFocus(object sender, KeyboardFocusChangedEventArgs e)
        {
            //Make sure sender is the correct Control.
            if (sender is TextBox)
            {
                //If nothing was entered, reset default text.
                if (((TextBox)sender).Text.Trim().Equals(""))
                {
                    ((TextBox)sender).Foreground = Brushes.Gray;
                    ((TextBox)sender).Text = "Enter label..";
                }
            }
        }

        private void tb_GotKeyboardFocusURL(object sender, KeyboardFocusChangedEventArgs e)
        {
            if (sender is TextBox)
            {
                //If nothing has been entered yet.
                if (((TextBox)sender).Foreground == Brushes.Gray)
                {
                    ((TextBox)sender).Text = "";
                    ((TextBox)sender).Foreground = Brushes.Black;
                }
            }
        }


        private void tb_LostKeyboardFocusURL(object sender, KeyboardFocusChangedEventArgs e)
        {
            //Make sure sender is the correct Control.
            if (sender is TextBox)
            {
                //If nothing was entered, reset default text.
                if (((TextBox)sender).Text.Trim().Equals(""))
                {
                    ((TextBox)sender).Foreground = Brushes.Gray;
                    ((TextBox)sender).Text = "Enter URL..";
                }
            }
        }
        private void tb_GotKeyboardFocusSearch(object sender, KeyboardFocusChangedEventArgs e)
        {
            if (sender is TextBox)
            {
                //If nothing has been entered yet.
                if (((TextBox)sender).Foreground == Brushes.Gray)
                {
                    ((TextBox)sender).Text = "";
                    ((TextBox)sender).Foreground = Brushes.Black;
                }
            }
        }


        private void tb_LostKeyboardFocusSearch(object sender, KeyboardFocusChangedEventArgs e)
        {
            //Make sure sender is the correct Control.
            if (sender is TextBox)
            {
                //If nothing was entered, reset default text.
                if (((TextBox)sender).Text.Trim().Equals(""))
                {
                    ((TextBox)sender).Foreground = Brushes.Gray;
                    ((TextBox)sender).Text = "Search allow list by label or URl...";
                }
            }
        }


        public class ThreatDescription
        {

            public bool Id { get; set; }
            public string Label { get; set; }
            public string URL { get; set; }
        }



        private List<ThreatDescription> LoadCollectionData()
        {
            List<ThreatDescription> authors = new List<ThreatDescription>();
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });
            authors.Add(new ThreatDescription()
            {
                Id = false,
                Label = "Website Name",
                URL = "https://thiswebsitename.com",
            });




            return authors;

        }
    }
}
